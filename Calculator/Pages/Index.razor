@page "/"
@using System.Text;

<PageTitle>Calculator</PageTitle>

<h1>Calculator</h1>


<div class="calculator">
        <div class="display-container">
            @calc1
        </div>
    <div class="buttons-container">
        <div class="row1-buttons button-row">
            <btn class="ac-button calcbutton">AC</btn>
            <button @onclick="() => RemoveCharacter(c)" class="c-button calcbutton">C</button>
            <btn class="percentage-button calcbutton">%</btn>
            <button @onclick="() => UpdateOperator(divide)" class="division-button calcbutton">/</button>
        </div>
        <div class="row2-buttons button-row">
            <button @onclick="() => UpdateHeading(1.ToString())" class="number-button calcbutton">1</button>
            <button @onclick="() => UpdateHeading(2.ToString())" class="number-button calcbutton">2</button>
            <button @onclick="() => UpdateHeading(3.ToString())" class="number-button calcbutton">3</button>
            <button @onclick="() => UpdateOperator(multiply)" class="multiply-button calcbutton">x</button>
        </div>
        <div class="row3-buttons button-row">
            <button @onclick="() => UpdateHeading(4.ToString())" class="number-button calcbutton">4</button>
            <button @onclick="() => UpdateHeading(5.ToString())" class="number-button calcbutton">5</button>
            <button @onclick="() => UpdateHeading(6.ToString())" class="number-button calcbutton">6</button>
            <button @onclick="() => UpdateOperator(subtract)" class="subtract-button calcbutton">-</button>
        </div>
        <div class="row4-buttons button-row">
            <button @onclick="() => UpdateHeading(7.ToString())" class="number-button calcbutton">7</button>
            <button @onclick="() => UpdateHeading(8.ToString())" class="number-button calcbutton">8</button>
            <button @onclick="() => UpdateHeading(9.ToString())" class="number-button calcbutton">9</button>
            <button @onclick="() => UpdateOperator(add)" class="addition-button calcbutton">+</button>
        </div>
        <div class="row5-buttons button-row">
            <button @onclick="() => UpdateHeading(0.ToString())" class="number-button calcbutton">0</button>
            <btn class="row5-decimal-button calcbutton">.</btn>
            <button @onclick="() => Calculate(calc1.ToString())" class="row5-equals-button calcbutton">=</button>
        </div>
    </div>
</div>

@code{
    private StringBuilder calc1 = new StringBuilder();
    private string? currentCalc;
    private string c = "c";
    private string multiply = "x";
    private string subtract = "-";
    private string divide = "/";
    private string add = "+";

    private void UpdateHeading(string character)
    {

        calc1.Append(character);
    }

    private void UpdateOperator(string character)
    {
        if (character == add || character == subtract || character == multiply || character == divide)
        {
            if (calc1.ToString().Split(" ").Contains(add) || calc1.ToString().Split(" ").Contains(subtract) || calc1.ToString().Split(" ").Contains(multiply) || calc1.ToString().Split(" ").Contains(divide))
            {
                Calculate(calc1.ToString());
            }
            else
            {
                calc1.Append(" " + character + " ");
            }
        }
        else
        {
            calc1.Append(" " + character + " ");
        }

    }

    private void RemoveCharacter(string character)
    {
        if(calc1 is not null || calc1.Length > 0)
        {

            calc1.Clear();
        }

    }

    private float Add(float pVal1, float pVal2)
    {
        return (pVal1 + pVal2);
    }

    private float Subtract(float pVal1, float pVal2)
    {
        return (pVal1 - pVal2);
    }

    private float Multiply(float pVal1, float pVal2)
    {
        return (pVal1 * pVal2);
    }

    private float Divide(float pVal1, float pVal2)
    {
        return (pVal1 / pVal2);
    }

    private void Calculate(string pCalculation)
    {


        if(pCalculation is not null || pCalculation.ToString().Split(" ").Length > 1)
        {

            string[] calculationSeperated = pCalculation.Split(' ');
            calc1.Clear();

            if(calculationSeperated.Length > 2 && !calculationSeperated.Contains(""))
            {
                float val1 = float.Parse(calculationSeperated[0]);
                float val2 = float.Parse(calculationSeperated[2]);
                float output = 0;

                switch (calculationSeperated[1])
                {
                    case "+":
                        output = Add(val1, val2);
                        UpdateHeading(output.ToString());
                        break;

                    case "-":
                        output = Subtract(val1, val2);
                        UpdateHeading(output.ToString());
                        break;

                    case "/":
                        output = Divide(val1, val2);
                        UpdateHeading(output.ToString());
                        break;

                    case "x":
                        output = Multiply(val1, val2);
                        UpdateHeading(output.ToString());
                        break;

                    default: break;

                }
            }

        }

    }

}


